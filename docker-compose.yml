---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-server:7.2.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.2.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
  create-topics:
    image: confluentinc/cp-enterprise-kafka:7.2.0
    container_name: create-topics
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b broker:29092 1 300 && \
      echo Creating topics... && \
      kafka-topics --bootstrap-server broker:29092 --create --topic tomato --partitions 3 --replication-factor 1 && \
      kafka-topics --bootstrap-server broker:29092 --create --topic bread --partitions 3 --replication-factor 1 && \
      kafka-topics --bootstrap-server broker:29092 --create --topic meat --partitions 3 --replication-factor 1 && \
      kafka-topics --bootstrap-server broker:29092 --create --topic side-dishes --partitions 3 --replication-factor 1 && \
      kafka-topics --bootstrap-server broker:29092 --create --topic burger --partitions 3 --replication-factor 1'"
  burger-quiz:
    build: burger-quiz
    container_name: burger-quiz
    depends_on:
      create-topics:
        condition: service_completed_successfully
    environment:
      KAFKA_BOOTSTRAP_SERVER: broker:29092
  kapoeira:
    image: lectratech/kapoeira
    container_name: kapoeira
    depends_on:
      burger-quiz:
        condition: service_started
    volumes:
      - ./features:/features
      - ./target/reports:/reports
    environment:
      KAFKA_BOOTSTRAP_SERVER: broker:29092
      JAAS_AUTHENT: false